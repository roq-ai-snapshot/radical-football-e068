generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model academy {
  id      String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name    String @db.VarChar(255)
  user_id String @db.Uuid
  user    user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team    team[]
}

model attendance {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id   String   @db.Uuid
  practice_id String   @db.Uuid
  status      String   @db.VarChar(50)
  player      player   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  practice    practice @relation(fields: [practice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model coach {
  id      String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id String @db.Uuid
  team_id String @db.Uuid
  team    team   @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user    user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model game {
  id       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team_id  String   @db.Uuid
  date     DateTime @db.Date
  time     DateTime @db.Time(6)
  location String   @db.VarChar(255)
  opponent String   @db.VarChar(255)
  team     team     @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model player {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String           @db.Uuid
  team_id        String           @db.Uuid
  attendance     attendance[]
  team           team             @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player_profile player_profile[]
}

model player_profile {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id String  @db.Uuid
  height    Int?
  weight    Int?
  position  String? @db.VarChar(50)
  player    player  @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model practice {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team_id    String       @db.Uuid
  date       DateTime     @db.Date
  time       DateTime     @db.Time(6)
  location   String       @db.VarChar(255)
  attendance attendance[]
  team       team         @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String     @db.VarChar(255)
  academy_id String     @db.Uuid
  coach      coach[]
  game       game[]
  player     player[]
  practice   practice[]
  academy    academy    @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  academy     academy[]
  coach       coach[]
  player      player[]
}
